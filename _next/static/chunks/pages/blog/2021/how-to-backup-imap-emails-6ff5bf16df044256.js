(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[688],{3880:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/2021/how-to-backup-imap-emails",function(){return s(4759)}])},4759:function(e,n,s){"use strict";s.r(n),s.d(n,{default:function(){return o}});var i=s(5893);s(7294);var r=s(1304),a=s(7037),l=s(4187);function o(){return(0,i.jsxs)(a.Z,{title:"how to backup imap emails",createdAt:"2021-02-26T13:44:28.000Z",tags:"technology",children:[(0,i.jsx)("h4",{children:"Preface"}),(0,i.jsx)("p",{children:"Recently I bought some space for email hosting. For personal emails I use Gmail & Outlook, so I never thought about keeping backup of my emails. But with this provider I wanted to keep off-site backup of my new email accounts."}),(0,i.jsxs)("p",{children:["I researched many CLI based tools for this. I think"," ",(0,i.jsx)(l.Z,{href:"https://isync.sourceforge.io/mbsync.html",text:"mbsync",externalIcon:!0})," ","works best for this. It supports bidirectional and one-way sync, which is required for backup and restore."]}),(0,i.jsxs)("p",{children:["Our goal here is to download emails in ",(0,i.jsx)("code",{children:"Maildir"})," format and then backup them using ",(0,i.jsx)("code",{children:"rclone"}),"."]}),(0,i.jsx)("h4",{children:"Configuring mbsync"}),(0,i.jsxs)("p",{children:["By default ",(0,i.jsx)("code",{children:"mbsync"})," uses ",(0,i.jsx)("code",{children:"~/.mbsyncrc"})," file as default configuration, but it supports custom config with"," ",(0,i.jsx)("code",{children:"-c"})," argument. We are going to use this option, so we can switch between different configuration files."]}),(0,i.jsx)("p",{children:"Here is a sample configuration file for pulling emails to a local directory"}),(0,i.jsx)(r.Z,{language:"bash",children:'# .mbsyncrc_pull\n# global options\nCreate Slave\nExpunge Slave\nSync Pull\n# required when moving emails with email client\nCopyArrivalDate yes\n\nIMAPAccount email-me\nHost mail.email.com\nUser me@email.com\nPassCmd "gpg -q --for-your-eyes-only --no-tty -d email.pass"\nSSLType IMAPS\nCertificateFile /etc/ssl/certs/ca-certificates.crt\n\n# mappings\nIMAPStore remote-email-me\nAccount email-me\n\n# local storage we\'ll be using. Note the trailing slash at the end of the Path\nMaildirStore local-email-me\nPath ~/imap-backup/mails/email/me/\nInbox ~/imap-backup/mails/email/me/Inbox\nSubFolders Verbatim\n\n# channels\nChannel sync-email-me\nMaster :remote-email-me:\nSlave :local-email-me:\nPatterns * !Junk !Trash\nSyncState *'}),(0,i.jsx)("h4",{children:"GPG for encrypting/decrypting passwords"}),(0,i.jsx)("p",{children:"We don't want to keep plaintext passwords in the configuration file. We can use GPG to encrypt/decrypt passwords in our local system."}),(0,i.jsx)("p",{children:"You can use the following command to encrypt password :-"}),(0,i.jsx)(r.Z,{language:"bash",children:'echo "password" | gpg --symmetric --armor > secret.pass'}),(0,i.jsx)("p",{children:"It will ask for a passphrase."}),(0,i.jsx)("p",{children:"Then you can use the following command to decrypt this file :-"}),(0,i.jsx)(r.Z,{language:"bash",children:"gpg -q --for-your-eyes-only --no-tty -d secret.pass"}),(0,i.jsx)("p",{children:"You will be prompted for passphrase which was entered when encrypting this file."}),(0,i.jsx)("h4",{children:"Configuration details"}),(0,i.jsxs)("p",{children:["This configuration is specifically for pulling emails to local disk."," ",(0,i.jsx)("code",{children:"Sync Pull"})," indicates we want to pull emails from our"," ",(0,i.jsx)("code",{children:"IMAPStore"})," to ",(0,i.jsx)("code",{children:"MaildirStore"}),"."]}),(0,i.jsxs)("p",{children:[(0,i.jsx)("code",{children:"CopyArrivalDate"})," is here to ensure correct dates are used when moving emails with email clients."]}),(0,i.jsxs)("p",{children:[(0,i.jsx)("code",{children:"IMAPAccount"})," defines remote IMAP account. Notice"," ",(0,i.jsx)("code",{children:"PassCmd"})," is using GPG decryption that was explained in last section."]}),(0,i.jsxs)("p",{children:[(0,i.jsx)("code",{children:"IMAPStore/Account"})," mapping links an email account with IMAP store. ",(0,i.jsx)("code",{children:"MaildirStore"})," is used for defining local disk path where ",(0,i.jsx)("code",{children:"Maildir"})," will be stored."]}),(0,i.jsxs)("p",{children:["Lastly we have channels, ",(0,i.jsx)("code",{children:"Channel"})," is used to define which direction emails will flow. Because of ",(0,i.jsx)("code",{children:"Sync Pull"})," mails will go from ",(0,i.jsx)("code",{children:"Master"})," to ",(0,i.jsx)("code",{children:"Slave"}),"."]}),(0,i.jsx)("p",{children:"Once you have configured your email account, emails can be downloaded using the following command :-"}),(0,i.jsx)(r.Z,{language:"bash",children:"mbsync -aq -c .mbsyncrc_pull"}),(0,i.jsx)("h4",{children:"Backup using rclone"}),(0,i.jsxs)("p",{children:[(0,i.jsx)(l.Z,{href:"https://rclone.org/",text:"mbsync",externalIcon:!0})," ","is a good option for CLI based backups. We have downloaded emails in a directory, we just need to upload it as a zip file."]}),(0,i.jsxs)("p",{children:["Configuring ",(0,i.jsx)("code",{children:"rclone"})," to use your choice of backend is explained in details on their website."]}),(0,i.jsxs)("p",{children:["In ",(0,i.jsx)("code",{children:"Maildir"})," there are some additional files which we don't need in zip archive. Use the following command for preparing zip :-"]}),(0,i.jsx)(r.Z,{language:"bash",children:"zip -q -r emails.zip mails -x '*/*.mbsyncstate' '*/*.uidvalidity'"}),(0,i.jsx)("p",{children:"Finally move zip file to remote location with the following command :-"}),(0,i.jsx)(r.Z,{language:"bash",children:"rclone move emails.zip remote:<remote_backup_path>"}),(0,i.jsx)("h4",{children:"Conclusion"}),(0,i.jsxs)("p",{children:["Here we have discussed how to take IMAP backup using ",(0,i.jsx)("code",{children:"mbsync"})," ","and ",(0,i.jsx)("code",{children:"rclone"}),". Similarly ",(0,i.jsx)("code",{children:"mbsync"})," can be used for restoring emails back to IMAP server. Readers should be able to figure that out. If I get some time in future I will try to write a post about restoring emails."]})]})}},1304:function(e,n,s){"use strict";s.d(n,{Z:function(){return l}});var i=s(5893);s(7294);var r=s(4329),a=s(753);function l(e){let{language:n,children:s}=e;return(0,i.jsx)(r.Z,{language:n,style:a._4,children:s})}},7037:function(e,n,s){"use strict";s.d(n,{Z:function(){return m}});var i=s(5893),r=s(7294),a=s(3944),l=s(1163),o=s(3197),t=s(4217),c=s(2891),d=s(794);function h(e){let{date:n}=e;return(0,i.jsxs)("span",{children:[(0,i.jsx)("span",{className:"badge bg-info me-2 p-2 text-uppercase",children:"Posted on "}),(0,i.jsx)("span",{className:"badge bg-secondary me-2 p-2",children:new Date(n).toDateString()})]})}var u=s(5154);function m(e){let{children:n,title:s,tags:m,createdAt:p}=e,x=r.useRef(null),f=r.useRef(null),j=e=>{e.current&&e.current.scrollIntoView({behavior:"smooth",block:"start"})};return s=c(s),(0,i.jsxs)(d.Z,{title:s,children:[(0,i.jsxs)("div",{ref:f,children:[(0,i.jsx)("span",{className:"float-start",children:(0,i.jsx)(h,{date:p})}),(0,i.jsx)("span",{className:"float-end",children:(0,i.jsxs)(o.Z,{children:[(0,i.jsx)(t.Z,{onClick:()=>l.push("/blog"),size:"sm",variant:"primary",children:(0,i.jsx)(u.x_l,{})}),(0,i.jsx)(t.Z,{onClick:()=>j(x),size:"sm",variant:"primary",children:(0,i.jsx)(u.NWQ,{})})]})}),(0,i.jsx)("span",{className:"clearfix"})]}),(0,i.jsx)("br",{}),n,(0,i.jsx)("br",{ref:x}),(0,i.jsx)(t.Z,{onClick:()=>j(f),variant:"primary",size:"sm",children:(0,i.jsx)(u.ZTc,{})}),(0,i.jsx)("br",{}),(0,i.jsx)("br",{}),(0,i.jsx)(a.qw,{shortname:"sushantdhiman-github-io",config:{title:s}})]})}},794:function(e,n,s){"use strict";s.d(n,{Z:function(){return o}});var i=s(5893);s(7294);var r=s(4184),a=s(9008),l=s(2891);function o(e){let{title:n,children:s,className:o}=e;return(0,i.jsxs)("div",{className:r("my-3",o),children:[(0,i.jsx)(a,{children:(0,i.jsx)("title",{children:"Sushant Dhiman | ".concat(l(n))})}),(0,i.jsx)("h2",{className:"my-3 text-center text-primary",children:l(n)}),s]})}}},function(e){e.O(0,[530,753,774,888,179],function(){return e(e.s=3880)}),_N_E=e.O()}]);