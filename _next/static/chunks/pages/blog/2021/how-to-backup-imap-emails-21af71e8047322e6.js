(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[688],{3880:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/2021/how-to-backup-imap-emails",function(){return c(9255)}])},9255:function(c,b,a){"use strict";a.r(b),a.d(b,{"default":function(){return h}});var d=a(5893);a(7294);var e=a(4362),f=a(1315),g=a(9191);function h(){return(0,d.jsxs)(f.Z,{children:[(0,d.jsx)("h4",{children:"Preface"}),(0,d.jsx)("p",{children:"Recently I bought some space for email hosting. For personal emails I use Gmail & Outlook, so I never thought about keeping backup of my emails. But with this provider I wanted to keep off-site backup of my new email accounts."}),(0,d.jsxs)("p",{children:["I researched many CLI based tools for this. I think"," ",(0,d.jsx)(g.Z,{href:"https://isync.sourceforge.io/mbsync.html",text:"mbsync",externalIcon:!0})," ","works best for this. It supports bidirectional and one-way sync, which is required for backup and restore."]}),(0,d.jsxs)("p",{children:["Our goal here is to download emails in ",(0,d.jsx)("code",{children:"Maildir"})," format and then backup them using ",(0,d.jsx)("code",{children:"rclone"}),"."]}),(0,d.jsx)("h4",{children:"Configuring mbsync"}),(0,d.jsxs)("p",{children:["By default ",(0,d.jsx)("code",{children:"mbsync"})," uses ",(0,d.jsx)("code",{children:"~/.mbsyncrc"})," file as default configuration, but it supports custom config with"," ",(0,d.jsx)("code",{children:"-c"})," argument. We are going to use this option, so we can switch between different configuration files."]}),(0,d.jsx)("p",{children:"Here is a sample configuration file for pulling emails to a local directory"}),(0,d.jsx)(e.Z,{language:"bash",children:'# .mbsyncrc_pull\n# global options\nCreate Slave\nExpunge Slave\nSync Pull\n# required when moving emails with email client\nCopyArrivalDate yes\n\nIMAPAccount email-me\nHost mail.email.com\nUser me@email.com\nPassCmd "gpg -q --for-your-eyes-only --no-tty -d email.pass"\nSSLType IMAPS\nCertificateFile /etc/ssl/certs/ca-certificates.crt\n\n# mappings\nIMAPStore remote-email-me\nAccount email-me\n\n# local storage we\'ll be using. Note the trailing slash at the end of the Path\nMaildirStore local-email-me\nPath ~/imap-backup/mails/email/me/\nInbox ~/imap-backup/mails/email/me/Inbox\nSubFolders Verbatim\n\n# channels\nChannel sync-email-me\nMaster :remote-email-me:\nSlave :local-email-me:\nPatterns * !Junk !Trash\nSyncState *'}),(0,d.jsx)("h4",{children:"GPG for encrypting/decrypting passwords"}),(0,d.jsx)("p",{children:"We don't want to keep plaintext passwords in the configuration file. We can use GPG to encrypt/decrypt passwords in our local system."}),(0,d.jsx)("p",{children:"You can use the following command to encrypt password :-"}),(0,d.jsx)(e.Z,{language:"bash",children:'echo "password" | gpg --symmetric --armor > secret.pass'}),(0,d.jsx)("p",{children:"It will ask for a passphrase."}),(0,d.jsx)("p",{children:"Then you can use the following command to decrypt this file :-"}),(0,d.jsx)(e.Z,{language:"bash",children:"gpg -q --for-your-eyes-only --no-tty -d secret.pass"}),(0,d.jsx)("p",{children:"You will be prompted for passphrase which was entered when encrypting this file."}),(0,d.jsx)("h4",{children:"Configuration details"}),(0,d.jsxs)("p",{children:["This configuration is specifically for pulling emails to local disk."," ",(0,d.jsx)("code",{children:"Sync Pull"})," indicates we want to pull emails from our"," ",(0,d.jsx)("code",{children:"IMAPStore"})," to ",(0,d.jsx)("code",{children:"MaildirStore"}),"."]}),(0,d.jsxs)("p",{children:[(0,d.jsx)("code",{children:"CopyArrivalDate"})," is here to ensure correct dates are used when moving emails with email clients."]}),(0,d.jsxs)("p",{children:[(0,d.jsx)("code",{children:"IMAPAccount"})," defines remote IMAP account. Notice"," ",(0,d.jsx)("code",{children:"PassCmd"})," is using GPG decryption that was explained in last section."]}),(0,d.jsxs)("p",{children:[(0,d.jsx)("code",{children:"IMAPStore/Account"})," mapping links an email account with IMAP store. ",(0,d.jsx)("code",{children:"MaildirStore"})," is used for defining local disk path where ",(0,d.jsx)("code",{children:"Maildir"})," will be stored."]}),(0,d.jsxs)("p",{children:["Lastly we have channels, ",(0,d.jsx)("code",{children:"Channel"})," is used to define which direction emails will flow. Because of ",(0,d.jsx)("code",{children:"Sync Pull"})," mails will go from ",(0,d.jsx)("code",{children:"Master"})," to ",(0,d.jsx)("code",{children:"Slave"}),"."]}),(0,d.jsx)("p",{children:"Once you have configured your email account, emails can be downloaded using the following command :-"}),(0,d.jsx)(e.Z,{language:"bash",children:"mbsync -aq -c .mbsyncrc_pull"}),(0,d.jsx)("h4",{children:"Backup using rclone"}),(0,d.jsxs)("p",{children:[(0,d.jsx)(g.Z,{href:"https://rclone.org/",text:"mbsync",externalIcon:!0})," ","is a good option for CLI based backups. We have downloaded emails in a directory, we just need to upload it as a zip file."]}),(0,d.jsxs)("p",{children:["Configuring ",(0,d.jsx)("code",{children:"rclone"})," to use your choice of backend is explained in details on their website."]}),(0,d.jsxs)("p",{children:["In ",(0,d.jsx)("code",{children:"Maildir"})," there are some additional files which we don't need in zip archive. Use the following command for preparing zip :-"]}),(0,d.jsx)(e.Z,{language:"bash",children:"zip -q -r emails.zip mails -x '*/*.mbsyncstate' '*/*.uidvalidity'"}),(0,d.jsx)("p",{children:"Finally move zip file to remote location with the following command :-"}),(0,d.jsx)(e.Z,{language:"bash",children:"rclone move emails.zip remote:<remote_backup_path>"}),(0,d.jsx)("h4",{children:"Conclusion"}),(0,d.jsxs)("p",{children:["Here we have discussed how to take IMAP backup using ",(0,d.jsx)("code",{children:"mbsync"})," ","and ",(0,d.jsx)("code",{children:"rclone"}),". Similarly ",(0,d.jsx)("code",{children:"mbsync"})," can be used for restoring emails back to IMAP server. Readers should be able to figure that out. If I get some time in future I will try to write a post about restoring emails."]})]})}},4362:function(c,b,a){"use strict";a.d(b,{Z:function(){return g}});var d=a(5893);a(7294);var e=a(8954),f=a(6671);function g(a){var b=a.language,c=a.children;return(0,d.jsx)(e.Z,{language:b,style:f._4,children:c})}},1315:function(d,b,a){"use strict";a.d(b,{Z:function(){return n}});var e=a(5893),f=a(7294),g=a(3944),c=a(1163),h=a.n(c),i=a(674);function j(a){var b=a.date;return(0,e.jsxs)("span",{children:[(0,e.jsx)("span",{className:"badge bg-info me-2 p-2 text-uppercase",children:"Posted on "}),(0,e.jsx)("span",{className:"text-success",children:new Date(b).toDateString()})]})}var k=a(7814),l=a(1966),m=a(8994);function n(b){var d=b.children,n=f.useRef(null),o=f.useRef(null),p=function(a){a.current&&a.current.scrollIntoView({behavior:"smooth",block:"start"})},q=(0,c.useRouter)(),a=m.find(function(a){return a.href===q.pathname});return(0,e.jsxs)(i.Z,{title:a.name,children:[(0,e.jsxs)("div",{ref:o,children:[(0,e.jsx)("span",{className:"float-start",children:(0,e.jsx)(j,{date:a.createdAt})}),(0,e.jsx)("span",{className:"float-end",children:(0,e.jsxs)(l.hE,{children:[(0,e.jsx)(l.zx,{onClick:function(){return h().push("/blog")},size:"sm",variant:"primary",children:(0,e.jsx)(k.G,{icon:"arrow-left"})}),(0,e.jsx)(l.zx,{onClick:function(){return p(n)},size:"sm",variant:"primary",children:(0,e.jsx)(k.G,{icon:"arrow-down"})})]})}),(0,e.jsx)("span",{className:"clearfix"})]}),(0,e.jsx)("br",{}),d,(0,e.jsx)("br",{ref:n}),(0,e.jsx)(l.zx,{onClick:function(){return p(o)},variant:"primary",size:"sm",children:(0,e.jsx)(k.G,{icon:"arrow-up"})}),(0,e.jsx)("br",{}),(0,e.jsx)("br",{}),(0,e.jsx)(g.qw,{shortname:"sushantdhiman-github-io",config:{title:a.name}})]})}},674:function(f,b,a){"use strict";a.d(b,{Z:function(){return k}});var g=a(5893);a(7294);var c=a(4184),h=a.n(c),d=a(9008),i=a.n(d),e=a(2891),j=a.n(e);function k(a){var b=a.title,c=a.children,d=a.className;return(0,g.jsxs)("div",{className:h()("my-3",d),children:[(0,g.jsx)(i(),{children:(0,g.jsxs)("title",{children:["Sushantdhiman.com - ",j()(b)]})}),(0,g.jsx)("h2",{className:"my-3 text-center text-primary",children:j()(b)}),c]})}},8994:function(a){"use strict";a.exports=JSON.parse('[{"href":"/blog/2022/blind-city-of-the-blind-king","name":"Blind city of the blind king","createdAt":"2022-08-13T11:19:13.000Z","updatedAt":"2022-08-13T11:09:13.401Z"},{"href":"/blog/2022/continuous-deployment-of-google-cloud-functions-written-with-typescript","name":"Continuous deployment of google cloud functions written with typescript","createdAt":"2022-06-08T03:31:18.000Z","updatedAt":"2022-06-08T03:28:29.407Z"},{"href":"/blog/2021/odoo-dual-currency-invoice","name":"Odoo dual currency invoice","createdAt":"2021-12-30T13:22:04.000Z","updatedAt":"2021-12-30T13:20:15.278Z"},{"href":"/blog/2021/how-to-backup-imap-emails","name":"How to backup imap emails","createdAt":"2021-02-26T13:44:28.000Z","updatedAt":"2021-03-11T09:43:55.938Z"},{"href":"/blog/2020/vscode-to-neovim","name":"Vscode to neovim","createdAt":"2020-05-09T17:46:54.000Z","updatedAt":"2020-08-22T08:01:10.739Z"},{"href":"/blog/price","name":"Price","createdAt":"2018-06-24T10:30:00.000Z","updatedAt":"2020-08-22T08:01:10.739Z"},{"href":"/blog/diminishing-capability","name":"Diminishing capability","createdAt":"2018-02-11T08:30:00.000Z","updatedAt":"2020-08-22T08:01:10.739Z"},{"href":"/blog/parabel-of-onion","name":"Parabel of onion","createdAt":"2016-05-16T07:30:00.000Z","updatedAt":"2020-08-22T08:01:10.739Z"}]')}},function(a){a.O(0,[735,671,774,888,179],function(){return a(a.s=3880)}),_N_E=a.O()}])