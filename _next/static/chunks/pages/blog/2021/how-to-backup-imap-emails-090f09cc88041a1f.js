(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[688],{3880:function(e,n,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/2021/how-to-backup-imap-emails",function(){return i(4759)}])},4759:function(e,n,i){"use strict";i.r(n),i.d(n,{default:function(){return r}});var t=i(5893);i(7294);var s=i(1304),o=i(7037),a=i(4187);function r(){return(0,t.jsxs)(o.Z,{children:[(0,t.jsx)("h4",{children:"Preface"}),(0,t.jsx)("p",{children:"Recently I bought some space for email hosting. For personal emails I use Gmail & Outlook, so I never thought about keeping backup of my emails. But with this provider I wanted to keep off-site backup of my new email accounts."}),(0,t.jsxs)("p",{children:["I researched many CLI based tools for this. I think"," ",(0,t.jsx)(a.Z,{href:"https://isync.sourceforge.io/mbsync.html",text:"mbsync",externalIcon:!0})," ","works best for this. It supports bidirectional and one-way sync, which is required for backup and restore."]}),(0,t.jsxs)("p",{children:["Our goal here is to download emails in ",(0,t.jsx)("code",{children:"Maildir"})," format and then backup them using ",(0,t.jsx)("code",{children:"rclone"}),"."]}),(0,t.jsx)("h4",{children:"Configuring mbsync"}),(0,t.jsxs)("p",{children:["By default ",(0,t.jsx)("code",{children:"mbsync"})," uses ",(0,t.jsx)("code",{children:"~/.mbsyncrc"})," file as default configuration, but it supports custom config with"," ",(0,t.jsx)("code",{children:"-c"})," argument. We are going to use this option, so we can switch between different configuration files."]}),(0,t.jsx)("p",{children:"Here is a sample configuration file for pulling emails to a local directory"}),(0,t.jsx)(s.Z,{language:"bash",children:'# .mbsyncrc_pull\n# global options\nCreate Slave\nExpunge Slave\nSync Pull\n# required when moving emails with email client\nCopyArrivalDate yes\n\nIMAPAccount email-me\nHost mail.email.com\nUser me@email.com\nPassCmd "gpg -q --for-your-eyes-only --no-tty -d email.pass"\nSSLType IMAPS\nCertificateFile /etc/ssl/certs/ca-certificates.crt\n\n# mappings\nIMAPStore remote-email-me\nAccount email-me\n\n# local storage we\'ll be using. Note the trailing slash at the end of the Path\nMaildirStore local-email-me\nPath ~/imap-backup/mails/email/me/\nInbox ~/imap-backup/mails/email/me/Inbox\nSubFolders Verbatim\n\n# channels\nChannel sync-email-me\nMaster :remote-email-me:\nSlave :local-email-me:\nPatterns * !Junk !Trash\nSyncState *'}),(0,t.jsx)("h4",{children:"GPG for encrypting/decrypting passwords"}),(0,t.jsx)("p",{children:"We don't want to keep plaintext passwords in the configuration file. We can use GPG to encrypt/decrypt passwords in our local system."}),(0,t.jsx)("p",{children:"You can use the following command to encrypt password :-"}),(0,t.jsx)(s.Z,{language:"bash",children:'echo "password" | gpg --symmetric --armor > secret.pass'}),(0,t.jsx)("p",{children:"It will ask for a passphrase."}),(0,t.jsx)("p",{children:"Then you can use the following command to decrypt this file :-"}),(0,t.jsx)(s.Z,{language:"bash",children:"gpg -q --for-your-eyes-only --no-tty -d secret.pass"}),(0,t.jsx)("p",{children:"You will be prompted for passphrase which was entered when encrypting this file."}),(0,t.jsx)("h4",{children:"Configuration details"}),(0,t.jsxs)("p",{children:["This configuration is specifically for pulling emails to local disk."," ",(0,t.jsx)("code",{children:"Sync Pull"})," indicates we want to pull emails from our"," ",(0,t.jsx)("code",{children:"IMAPStore"})," to ",(0,t.jsx)("code",{children:"MaildirStore"}),"."]}),(0,t.jsxs)("p",{children:[(0,t.jsx)("code",{children:"CopyArrivalDate"})," is here to ensure correct dates are used when moving emails with email clients."]}),(0,t.jsxs)("p",{children:[(0,t.jsx)("code",{children:"IMAPAccount"})," defines remote IMAP account. Notice"," ",(0,t.jsx)("code",{children:"PassCmd"})," is using GPG decryption that was explained in last section."]}),(0,t.jsxs)("p",{children:[(0,t.jsx)("code",{children:"IMAPStore/Account"})," mapping links an email account with IMAP store. ",(0,t.jsx)("code",{children:"MaildirStore"})," is used for defining local disk path where ",(0,t.jsx)("code",{children:"Maildir"})," will be stored."]}),(0,t.jsxs)("p",{children:["Lastly we have channels, ",(0,t.jsx)("code",{children:"Channel"})," is used to define which direction emails will flow. Because of ",(0,t.jsx)("code",{children:"Sync Pull"})," mails will go from ",(0,t.jsx)("code",{children:"Master"})," to ",(0,t.jsx)("code",{children:"Slave"}),"."]}),(0,t.jsx)("p",{children:"Once you have configured your email account, emails can be downloaded using the following command :-"}),(0,t.jsx)(s.Z,{language:"bash",children:"mbsync -aq -c .mbsyncrc_pull"}),(0,t.jsx)("h4",{children:"Backup using rclone"}),(0,t.jsxs)("p",{children:[(0,t.jsx)(a.Z,{href:"https://rclone.org/",text:"mbsync",externalIcon:!0})," ","is a good option for CLI based backups. We have downloaded emails in a directory, we just need to upload it as a zip file."]}),(0,t.jsxs)("p",{children:["Configuring ",(0,t.jsx)("code",{children:"rclone"})," to use your choice of backend is explained in details on their website."]}),(0,t.jsxs)("p",{children:["In ",(0,t.jsx)("code",{children:"Maildir"})," there are some additional files which we don't need in zip archive. Use the following command for preparing zip :-"]}),(0,t.jsx)(s.Z,{language:"bash",children:"zip -q -r emails.zip mails -x '*/*.mbsyncstate' '*/*.uidvalidity'"}),(0,t.jsx)("p",{children:"Finally move zip file to remote location with the following command :-"}),(0,t.jsx)(s.Z,{language:"bash",children:"rclone move emails.zip remote:<remote_backup_path>"}),(0,t.jsx)("h4",{children:"Conclusion"}),(0,t.jsxs)("p",{children:["Here we have discussed how to take IMAP backup using ",(0,t.jsx)("code",{children:"mbsync"})," ","and ",(0,t.jsx)("code",{children:"rclone"}),". Similarly ",(0,t.jsx)("code",{children:"mbsync"})," can be used for restoring emails back to IMAP server. Readers should be able to figure that out. If I get some time in future I will try to write a post about restoring emails."]})]})}},1304:function(e,n,i){"use strict";i.d(n,{Z:function(){return a}});var t=i(5893);i(7294);var s=i(4329),o=i(753);function a(e){let{language:n,children:i}=e;return(0,t.jsx)(s.Z,{language:n,style:o._4,children:i})}},7037:function(e,n,i){"use strict";i.d(n,{Z:function(){return m}});var t=i(5893),s=i(7294),o=i(3944),a=i(1163),r=i(3197),c=i(4217),l=i(794);function d(e){let{date:n}=e;return(0,t.jsxs)("span",{children:[(0,t.jsx)("span",{className:"badge bg-info me-2 p-2 text-uppercase",children:"Posted on "}),(0,t.jsx)("span",{className:"badge bg-secondary me-2 p-2",children:new Date(n).toDateString()})]})}var h=i(5154),u=i(8994);function m(e){let{children:n}=e,i=s.useRef(null),m=s.useRef(null),p=e=>{e.current&&e.current.scrollIntoView({behavior:"smooth",block:"start"})},f=(0,a.useRouter)(),g=u.find(e=>e.href===f.pathname);return(0,t.jsxs)(l.Z,{title:g.name,children:[(0,t.jsxs)("div",{ref:m,children:[(0,t.jsx)("span",{className:"float-start",children:(0,t.jsx)(d,{date:g.createdAt})}),(0,t.jsx)("span",{className:"float-end",children:(0,t.jsxs)(r.Z,{children:[(0,t.jsx)(c.Z,{onClick:()=>a.push("/blog"),size:"sm",variant:"primary",children:(0,t.jsx)(h.x_l,{})}),(0,t.jsx)(c.Z,{onClick:()=>p(i),size:"sm",variant:"primary",children:(0,t.jsx)(h.NWQ,{})})]})}),(0,t.jsx)("span",{className:"clearfix"})]}),(0,t.jsx)("br",{}),n,(0,t.jsx)("br",{ref:i}),(0,t.jsx)(c.Z,{onClick:()=>p(m),variant:"primary",size:"sm",children:(0,t.jsx)(h.ZTc,{})}),(0,t.jsx)("br",{}),(0,t.jsx)("br",{}),(0,t.jsx)(o.qw,{shortname:"sushantdhiman-github-io",config:{title:g.name}})]})}},794:function(e,n,i){"use strict";i.d(n,{Z:function(){return r}});var t=i(5893);i(7294);var s=i(4184),o=i(9008),a=i(2891);function r(e){let{title:n,children:i,className:r}=e;return(0,t.jsxs)("div",{className:s("my-3",r),children:[(0,t.jsx)(o,{children:(0,t.jsx)("title",{children:"Sushant Dhiman | ".concat(a(n))})}),(0,t.jsx)("h2",{className:"my-3 text-center text-primary",children:a(n)}),i]})}},8994:function(e){"use strict";e.exports=JSON.parse('[{"href":"/blog/2023/ignore-import-of-css-file-with-node.js","name":"Ignore import of css file with node.js","createdAt":"2023-05-27T13:03:53.000Z","updatedAt":"2023-05-27T13:02:07.668Z","tags":["technology"]},{"href":"/blog/2023/cloud-run-vs-cloud-functions","name":"Cloud run vs cloud functions","createdAt":"2023-04-11T11:35:24.000Z","updatedAt":"2023-05-27T12:47:22.490Z","tags":["technology"]},{"href":"/blog/2023/how-to-remove-all-text-box-from-pdf","name":"How to remove all text box from pdf","createdAt":"2023-04-09T12:46:12.000Z","updatedAt":"2023-04-09T12:44:52.681Z","tags":["technology"]},{"href":"/blog/2022/blind-city-of-the-blind-king","name":"Blind city of the blind king","createdAt":"2022-08-13T11:19:13.000Z","updatedAt":"2022-08-13T11:09:13.401Z","tags":["story"]},{"href":"/blog/2022/continuous-deployment-of-google-cloud-functions-written-with-typescript","name":"Continuous deployment of google cloud functions written with typescript","createdAt":"2022-06-08T03:31:18.000Z","updatedAt":"2023-04-09T12:06:53.955Z","tags":["technology"]},{"href":"/blog/2021/odoo-dual-currency-invoice","name":"Odoo dual currency invoice","createdAt":"2021-12-30T13:22:04.000Z","updatedAt":"2021-12-30T13:20:15.278Z","tags":["technology"]},{"href":"/blog/2021/how-to-backup-imap-emails","name":"How to backup imap emails","createdAt":"2021-02-26T13:44:28.000Z","updatedAt":"2021-03-11T09:43:55.938Z","tags":["technology"]},{"href":"/blog/2020/vscode-to-neovim","name":"Vscode to neovim","createdAt":"2020-05-09T17:46:54.000Z","updatedAt":"2020-08-22T08:01:10.739Z","tags":["technology"]},{"href":"/blog/price","name":"Price","createdAt":"2018-06-24T10:30:00.000Z","updatedAt":"2020-08-22T08:01:10.739Z","tags":["story"]},{"href":"/blog/diminishing-capability","name":"Diminishing capability","createdAt":"2018-02-11T08:30:00.000Z","updatedAt":"2020-08-22T08:01:10.739Z","tags":["thoughts"]},{"href":"/blog/parabel-of-onion","name":"Parabel of onion","createdAt":"2016-05-16T07:30:00.000Z","updatedAt":"2020-08-22T08:01:10.739Z","tags":["story"]}]')}},function(e){e.O(0,[530,753,774,888,179],function(){return e(e.s=3880)}),_N_E=e.O()}]);