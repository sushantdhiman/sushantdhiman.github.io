(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[0],{1548:(e,s,t)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/2024/puppeteer-extension-allow-permission",function(){return t(6174)}])},2758:(e,s,t)=>{"use strict";t.d(s,{A:()=>o});var r=t(7876);t(4232);var n=t(9841),i=t(9084);function o(e){let{language:s,children:t}=e;return(0,r.jsx)(n.A,{language:s,style:i.KQ,showLineNumbers:!0,children:t})}},2900:(e,s,t)=>{"use strict";t.d(s,{A:()=>a});var r=t(7876);t(4232);var n=t(2870),i=t(5483),o=t.n(i);let a=function(e){let{children:s,className:t,href:i,text:a,externalIcon:l}=e;return(0,r.jsxs)("a",{className:t,href:i,target:"_blank",children:[s,a&&(0,r.jsx)("span",{className:"me-1",children:a}),l&&(0,r.jsx)(n.EQc,{className:o().externalIcon})]})}},5483:e=>{e.exports={externalIcon:"ExternalLink_externalIcon__gmpoW"}},6174:(e,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>a});var r=t(7876);t(4232);var n=t(6243),i=t(2758),o=t(2900);function a(){return(0,r.jsxs)(n.A,{title:"Accepting chrome extension permission dialog with puppeteer",createdAt:"2024-04-08T12:29:31.520Z",tags:"technology",description:"Often, when testing Chrome extensions, you are required to accept some permission dialog. In this article, we will explore how you can do this with puppeteer",children:[(0,r.jsxs)("p",{children:[(0,r.jsx)(o.A,{href:"https://pptr.dev/",text:"Puppeteer",externalIcon:!0})," ","is a popular tool for chromium automation, and it is often used for testing web applications. It can also be used for testing Chrome extensions. Chrome extension has a mechanism to request optional permission from users. Most often, it is host permission to access some website. We will see how to do this with puppeteer."]}),(0,r.jsx)("h4",{children:"Problem"}),(0,r.jsxs)("p",{children:["Puppeteer can only control the browser and page. Permission dialog is a native API, that is currently not accessible programmatically. So we can't use puppeteer itself to accept such dialog. There is a relevant"," ",(0,r.jsx)(o.A,{href:"https://github.com/puppeteer/puppeteer/issues/5054",text:"issue",externalIcon:!0})," ","on Github about this."]}),(0,r.jsx)("h4",{children:"Solution"}),(0,r.jsxs)("p",{children:["To accept this dialog, we need to send keyboard events directly to the operating system. More specifically, we need to press ",(0,r.jsx)("code",{children:"Tab"})," ","and ",(0,r.jsx)("code",{children:"Enter"}),". There are many libraries for this, Github issue talk about using ",(0,r.jsx)("code",{children:"node-key-sender"}),". But this library requires full ",(0,r.jsx)("code",{children:"Java"})," setup, it is just a wrapper around a jar file. Not good enough."]}),(0,r.jsxs)("p",{children:["After some searching, I found ",(0,r.jsx)("code",{children:"robotjs"})," suitable for this. But that library is not well maintained. But luckily, there is a"," ",(0,r.jsx)(o.A,{href:"https://github.com/hurdlegroup/robotjs",text:"fork",externalIcon:!0})," ","of this library. Below is the sample code I used for accepting permission dialog."]}),(0,r.jsx)(i.A,{language:"javascript",children:"import Robot from '@hurdlegroup/robotjs';\n\n// some code that triggers permission dialog\n// ....\n// ....\n\n// accept permission dialog\nawait wait(1000);\nRobot.keyTap('tab');\nRobot.keyTap('enter');\nawait wait(1000);\n"})]})}},6243:(e,s,t)=>{"use strict";t.d(s,{A:()=>x});var r=t(7876),n=t(4232),i=t(2867),o=t(3606),a=t(9099),l=t(6676),c=t(6750),h=t(9079),u=t(8280);function p(e){let{date:s}=e;return(0,r.jsxs)("span",{children:[(0,r.jsx)("span",{className:"badge bg-info me-2 p-2 text-uppercase",children:"Posted on "}),(0,r.jsx)("span",{className:"badge bg-dark me-2 p-2",children:new Date(s).toDateString()})]})}var d=t(2870);function x(e){let{children:s,title:t,description:x,createdAt:m}=e,{push:j,asPath:g}=(0,a.useRouter)(),b=n.useRef(null),f=n.useRef(null),w=e=>{e.current&&e.current.scrollIntoView({behavior:"smooth",block:"start"})};return t=(0,h.A)(t),(0,r.jsxs)(u.A,{title:t,children:[(0,r.jsx)(i.dp,{images:[],url:"https://sushantdhiman.com".concat(g),type:"BlogPosting",title:t,description:x,datePublished:m,authorName:"Sushant Dhiman"}),(0,r.jsxs)("div",{ref:f,children:[(0,r.jsx)("span",{className:"float-start",children:(0,r.jsx)(p,{date:m})}),(0,r.jsx)("span",{className:"float-end",children:(0,r.jsxs)(l.A,{children:[(0,r.jsx)(c.A,{onClick:()=>j("/blog"),size:"sm",color:"primary",children:(0,r.jsx)(d.QVr,{})}),(0,r.jsx)(c.A,{onClick:()=>w(b),size:"sm",color:"primary",children:(0,r.jsx)(d.$TP,{})})]})}),(0,r.jsx)("span",{className:"clearfix"})]}),(0,r.jsx)("br",{}),s,(0,r.jsx)("br",{ref:b}),(0,r.jsx)(c.A,{onClick:()=>w(f),color:"primary",size:"sm",children:(0,r.jsx)(d.uCC,{})}),(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),(0,r.jsx)(o.Mq,{shortname:"sushantdhiman-github-io",config:{title:t}})]})}},8280:(e,s,t)=>{"use strict";t.d(s,{A:()=>c});var r=t(7876);t(4232);var n=t(7328),i=t.n(n),o=t(9079),a=t(6587),l=t(7237);function c(e){let{title:s,headTitle:t,children:n}=e;return(0,r.jsxs)(a.A,{className:"justify-content-center",children:[(0,r.jsx)(i(),{children:(0,r.jsx)("title",{children:"".concat((0,o.A)(t||s)," | Sushant Dhiman")})}),(0,r.jsxs)(l.A,{md:"8",lg:"10",children:[s&&(0,r.jsx)("h1",{className:"my-5 text-center text-primary",children:(0,o.A)(s)}),n]})]})}}},e=>{var s=s=>e(e.s=s);e.O(0,[97,84,636,593,792],()=>s(1548)),_N_E=e.O()}]);